@use '../globals/palette.scss' as *;
@use '../globals/mixins.scss' as *;

.field {
  border: none;
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
  padding: 0;
  width: 100%;
  &-label {
    @include label;
  }
  &-input {
    align-items: center;
    border-radius: 4px;
    border: 1px solid;
    border-color: map-get($palette, 'l-gray');
    color: map-get($palette, 'd-gray');
    display: flex;
    font-family: Arial, sans-serif;
    font-size: 1rem;
    transition: border-color .5s;
    > input {
      background: none;
      border: none;
      flex: 1 1 0;
      font-size: 1rem;
      outline: none;
      padding: .5rem;
      &::placeholder {
        color: map-get($palette, 'disabled');
      }
      &:disabled {
        cursor: not-allowed;
      }
      &.field-has-prefix {
        padding-left: 5px;
      }
    }
    &-errors {
      list-style: none;
      margin: 0;
      padding: 0;
      li {
        &:first-of-type {
          margin: 10px 0 0;
        }
      }
    }
  }
  &-prefix {
    padding-left: .5rem;
  }
  &-error {
    color: map-get($palette, 'danger');
    .field-input,
    .field-label,
    input {
      color: map-get($palette, 'danger');
    }
    .field-input {
      color: map-get($palette, 'danger');
      border-color: map-get($palette, 'danger');
    }
  }
  &-input-error {
    color: map-get($palette, 'danger');
    font-family: Arial, sans-serif;
    font-size: 13px;
    line-height: 1;
    padding: 0 0 8px 0;
  }
  &-valid {
    color: map-get($palette, 'success');
    .field-input,
    .field-label,
    input {
      color: map-get($palette, 'success');
    }
    .field-input {
      color: map-get($palette, 'success');
      border-color: map-get($palette, 'success');
    }
  }
  &-disabled {
    .field-label {
      color: map-get($palette, 'disabled');
    }
    .field-input {
      border-color: map-get($palette, 'disabled');
      color: map-get($palette, 'disabled');
      > input {
        color: map-get($palette, 'disabled');
      }
    }
  }
}
